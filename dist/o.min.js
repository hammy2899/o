(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports):typeof define==="function"&&define.amd?define(["exports"],factory):factory(global.o={})})(this,function(exports){"use strict";function is(value){return value instanceof Object&&value.constructor===Object}function size(object){if(is(object)){return Object.keys(object).length}return-1}function empty(object){if(is(object)){return!(size(object)>0)}return false}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function deflate(object){if(is(object)&&!empty(object)){var result={};var keyValue=function keyValue(obj,currentPath){Object.keys(obj).forEach(function(key){var newPath=_toConsumableArray(currentPath).concat([key]);var value=obj[key];if(is(value)&&!empty(value)){keyValue(value,newPath)}else{result[newPath.join(".")]=value}})};keyValue(object,[]);return result}return{}}function clone(object){if(is(object)&&!empty(object)){var result={};Object.keys(object).forEach(function(key){result[key]=object[key]});return result}return{}}function getPathParts(path){var pathParts=path.split(".");var parts=[];var index=0;while(index<pathParts.length){var parsedPart=pathParts[index];while(parsedPart[parsedPart.length-1]==="\\"&&pathParts[index+1]!==undefined&&pathParts[index+1]!==null){parsedPart="".concat(parsedPart.slice(0,-1),".");index+=1;parsedPart+=pathParts[index]}index+=1;parts.push(parsedPart)}return parts}function del(object,path){if(is(object)&&!empty(object)){var cloned=clone(object);var result=cloned;var pathParts=getPathParts(path);for(var index=0;index<pathParts.length;index+=1){var key=pathParts[index];if(index===pathParts.length-1){delete cloned[key]}cloned=cloned[key]}return result}return{}}function clean(object){var follow=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(is(object)&&!empty(object)){var result=clone(object);var keysObject=follow?deflate(object):object;Object.keys(keysObject).forEach(function(key){var value=keysObject[key];if(value===undefined||value===null){result=del(result,key)}});return result}return{}}function each(object,iterator){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)&&typeof iterator==="function"){var flattenedObject=follow?deflate(object):object;Object.keys(flattenedObject).forEach(function(key){var value=flattenedObject[key];iterator(key,value)});return true}return false}function every(object,iterator){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)&&typeof iterator==="function"){var result=true;each(object,function(key,value){if(iterator(key,value)===false){result=false}},follow);return result}return false}function filter(object,iterator){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)&&typeof iterator==="function"){var result=clone(object);each(object,function(key,value){if(iterator(key,value)===false){result=del(result,key)}},follow);return result}return{}}function find(object,iterator,follow){if(is(object)&&!empty(object)&&typeof iterator==="function"){var found=false;var result="";each(object,function(key,value){if(!found){if(!follow||follow&&!is(value)){if(iterator(key,value)===true){found=true;result=key}}}},follow);return found?result:undefined}return undefined}function flip(object){var follow=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var useToString=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)){var result={};each(object,function(key,value){if(typeof value==="string"){result[value]=key}else if(typeof value!=="string"&&useToString){result[String(value).toString()]=key}},follow);return result}return{}}function has(object){if(is(object)&&!empty(object)){var hasPaths=true;for(var _len=arguments.length,paths=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){paths[_key-1]=arguments[_key]}paths.forEach(function(path){var parts=getPathParts(path);var currentValue=object;parts.forEach(function(key){if(is(currentValue)&&!empty(currentValue)){currentValue=currentValue[key]}});if(currentValue===undefined){hasPaths=false}});return hasPaths}return false}function get(object,path){var defaultValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:undefined;if(is(object)&&!empty(object)&&has(object,path)){var currentValue=object;getPathParts(path).forEach(function(key){if(is(currentValue)&&!empty(currentValue)){currentValue=currentValue[key]}});if(currentValue===undefined){return defaultValue}return currentValue}return defaultValue}function includes(object,value){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)){var result=false;each(object,function(key,objValue){if(!result){if(!follow||follow&&!is(value)){if(objValue===value){result=true}}}},follow);return result}return false}function set$1(object,path,value){if(is(object)){var cloned=clone(object);var result=cloned;var pathParts=getPathParts(path);for(var index=0;index<pathParts.length;index+=1){var key=pathParts[index];if(!is(cloned[key])){cloned[key]={}}if(index===pathParts.length-1){cloned[key]=value}cloned=cloned[key]}return result}return{}}function inflate(object){if(is(object)&&!empty(object)){var result={};Object.keys(object).forEach(function(path){var value=object[path];result=set$1(result,path,value)});return result}return{}}function keyOf(object,value){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)){var found=false;var result="";each(object,function(key,objValue){if(!found){if(!follow||follow&&!is(value)){if(objValue===value){found=true;result=key}}}},follow);return found?result:undefined}return undefined}function keys(object){var follow=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(is(object)&&!empty(object)){var result=[];if(follow){var followKeys=function followKeys(obj,currentPath){Object.keys(obj).forEach(function(key){var followPath="".concat(currentPath,".").concat(key);if(is(obj[key])&&!empty(obj[key])){followKeys(obj[key],followPath)}result.push(followPath)})};Object.keys(object).forEach(function(key){result.push(key);if(is(object[key])&&!empty(object[key])){followKeys(object[key],key)}})}else{result=Object.keys(object)}return result}return[]}function map(object,iterator){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)&&typeof iterator==="function"){var result={};each(object,function(key,value){result=set$1(result,key,iterator(key,value))},follow);return result}return{}}var commonjsGlobal=typeof window!=="undefined"?window:typeof global!=="undefined"?global:typeof self!=="undefined"?self:{};function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}var circleAssign=createCommonjsModule(function(module,exports){(function(global,factory){module.exports=factory()})(commonjsGlobal,function(){function isObj(o){return o instanceof Object&&o.constructor===Object}function mergeObject(target,source){var targetObject=target;var sourceObject=source;if(!isObj(target)){targetObject={}}if(!isObj(source)){sourceObject={}}var targetKeys=Object.keys(targetObject);var sourceKeys=Object.keys(sourceObject);var result={};targetKeys.forEach(function(key){if(sourceKeys.indexOf(key)!==-1){if(targetObject[key]===null){result[key]=sourceObject[key]}else if(isObj(targetObject[key])){if(isObj(sourceObject[key])){result[key]=mergeObject(targetObject[key],sourceObject[key])}else{result[key]=sourceObject[key]}}else{result[key]=sourceObject[key]}}else{result[key]=targetObject[key]}});sourceKeys.forEach(function(key){if(targetKeys.indexOf(key)===-1){result[key]=sourceObject[key]}});return result}function merge(target){var targetObject=target;if(!isObj(target)){targetObject={}}for(var _len=arguments.length,sources=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){sources[_key-1]=arguments[_key]}sources.forEach(function(s){if(isObj(s)){targetObject=mergeObject(targetObject,s)}});return targetObject}return merge})});function merge(target){for(var _len=arguments.length,sources=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){sources[_key-1]=arguments[_key]}return circleAssign.apply(null,[target].concat(sources))}function slice(object,start){var end=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Object.keys(object).length;if(is(object)&&!empty(object)){var objKeys=keys(object);var result={};objKeys.slice(start,end).forEach(function(key){result[key]=object[key]});return result}return{}}function some(object,iterator){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)&&typeof iterator==="function"){var result=false;each(object,function(key,value){if(iterator(key,value)===true){result=true}},follow);return result}return false}function sort(object,iterator){var follow=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(is(object)&&!empty(object)&&typeof iterator==="function"){var objKeys=keys(object,follow);var sortingValues=[];objKeys.forEach(function(key){var value=get(object,key);if(follow&&is(value)){return}sortingValues.push({key:key,value:value})});var sorted=sortingValues.sort(iterator);var result={};sorted.forEach(function(sortObj){var key=sortObj.key,value=sortObj.value;result=set$1(result,key,value)});return result}return{}}function values(object,follow){if(is(object)&&!empty(object)){var result=[];var keysObject=follow?deflate(object):object;Object.keys(keysObject).forEach(function(key){var value=keysObject[key];result.push(value)});return result}return[]}exports.clean=clean;exports.clone=clone;exports.deflate=deflate;exports.del=del;exports.each=each;exports.empty=empty;exports.every=every;exports.filter=filter;exports.find=find;exports.flip=flip;exports.get=get;exports.has=has;exports.includes=includes;exports.inflate=inflate;exports.is=is;exports.keyOf=keyOf;exports.keys=keys;exports.map=map;exports.merge=merge;exports.set=set$1;exports.size=size;exports.slice=slice;exports.some=some;exports.sort=sort;exports.values=values;Object.defineProperty(exports,"__esModule",{value:true})});